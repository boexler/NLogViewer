name: Release
on:
  push:
    tags:
      - '*'
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true  
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Build solution
      run: dotnet build -c Release
    - name: Fetch nuget packages
      run: |
        mkdir -p nuget
        Get-ChildItem -Path src -Recurse -Filter "*.nupkg" | Copy-Item -Destination nuget
        Get-ChildItem -Path src -Recurse -Filter "*.snupkg" | Copy-Item -Destination nuget
    - name: Upload nuget packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NuGet
        path: nuget
        if-no-files-found: error
  publish:
    name: Publish
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download nuget artifacts
      uses: actions/download-artifact@v4
      with:
        name: NuGet
        path: nuget
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload artifacts to release
      uses: actions/github-script@v8
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const path = require('path');

          const release_id = '${{ steps.get_release.outputs.id }}';
          const dir = './nuget';

          const files = fs.readdirSync(dir);
          for (const file of files) {
            const filePath = path.join(dir, file);
            const data = fs.readFileSync(filePath);
            const stats = fs.statSync(filePath);

            console.log(`Uploading asset: ${file} (${stats.size} bytes)`);
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release_id,
              name: file,
              data: data,
              headers: {
                'content-type': 'application/octet-stream',
                'content-length': stats.size.toString()
              }
            });
          }
    - name: Publish the package to GitHub Packages & nuget.org    
      run: |
        dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github --username ${{ github.repository_owner }} --password ${{ github.token }} --store-password-in-clear-text
        dotnet nuget push ./nuget/*.nupkg --source github
        dotnet nuget push ./nuget/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}